"""
Mutations for the flashcard service. Provides mutations for creating, updating, and deleting flashcard as well as
creating and deleting flashcard sets. To update a flashcard set, update, delete, and create flashcards individually.
"""
type Mutation {
    """
    Creates a new flashcard set. Mutation is only accessible internally within the system by other
    services and the gateway.
    ‚ö†Ô∏è This mutation is only accessible internally in the system and allows the caller to create FlashcardSets without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_createFlashcardSet(courseId: UUID!, assessmentId: UUID!, input: CreateFlashcardSetInput!): FlashcardSet!

    """
    Deletes a flashcard set. Throws an error if the flashcard set does not exist.
    The contained flashcards are deleted as well.
    """
    deleteFlashcardSet(input: UUID!): UUID!
    @deprecated(reason: "Only for development, will be removed in production. Use deleteAssessment in contents service instead.")

    """
    Modify a flashcard set.
    üîí The user must be an admin the course the flashcard set is in to perform this action.
    """
    mutateFlashcardSet(assessmentId: UUID!): FlashcardSetMutation!

    """
    Logs that a user has learned a flashcard.
    üîí The user must be enrolled in the course the flashcard set is in to perform this action.
    """
    logFlashcardLearned(input: LogFlashcardLearnedInput!): FlashcardLearnedFeedback!
}

type FlashcardSetMutation {
    """
    ID of the flashcard set that is being modified.
    """
    assessmentId: UUID!

    """
    Creates a new flashcard. Throws an error if the flashcard set does not exist.
    ‚ö†Ô∏è This mutation is only accessible internally in the system and allows the caller to create Flashcards without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_createFlashcard(input: CreateFlashcardInput!): Flashcard!

    """
    Updates a flashcard. Throws an error if the flashcard does not exist.
    ‚ö†Ô∏è This mutation is only accessible internally in the system and allows the caller to update Flashcards without
    any permissions check and should not be called without any validation of the caller's permissions. ‚ö†Ô∏è
    """
    _internal_noauth_updateFlashcard(input: UpdateFlashcardInput!): Flashcard!

    """
    Deletes the flashcard with the specified ID. Throws an error if the flashcard does not exist.
    """
    deleteFlashcard(id: UUID!): UUID!
}

"""
Feedback for the logFlashcardLearned mutation.
"""
type FlashcardLearnedFeedback {
    """
    Whether the flashcard was learned correctly.
    """
    success: Boolean!
    """
    Next date when the flashcard should be learned again.
    """
    nextLearnDate: DateTime!
    """
    Progress of the whole flashcard set.
    """
    flashcardSetProgress: FlashcardSetProgress!
}

type FlashcardSetProgress {
    """
    Percentage of how many flashcards in the set have been learned.
    """
    percentageLearned: Float!
    """
    Percentage of how many flashcards have been learned correctly of the ones that have been learned.
    """
    correctness: Float!
}